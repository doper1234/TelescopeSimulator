/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.numberaddition;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import javafx.scene.shape.Circle;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Chris
 */
public class NumberAdditionUI extends javax.swing.JFrame {

    ImageIcon jupiter1 = new ImageIcon("src/images/jupiter.png");
    ImageIcon jupiter2 = new ImageIcon("src/images/jupiter2.png");
    ImageIcon jupiter3 = new ImageIcon("src/images/jupiter3.png");
    ImageIcon jupiter4 = new ImageIcon("src/images/jupiter4.png");
    ImageIcon jupiter5 = new ImageIcon("src/images/jupiter5.png");
    ImageIcon jupiter6 = new ImageIcon("src/images/jupiter6.png");
    ImageIcon jupiter7 = new ImageIcon("src/images/jupiter7.png");
    ImageIcon jupiter8 = new ImageIcon("src/images/jupiter8.png");
    ImageIcon jupiter9 = new ImageIcon("src/images/jupiter9.png");
    ImageIcon jupiter10 = new ImageIcon("src/images/jupiter10.png");
    
    Image moonImage = new ImageIcon("src/images/moon.png").getImage();
    Image saturnImage = new ImageIcon("src/images/saturn.png").getImage();
    Image jupiterImage = jupiter1.getImage();
        
            
    int magnification = 0;

    public NumberAdditionUI() {
        initComponents();
        
    

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eyepieceFocalLengthField = new javax.swing.JTextField();
        fovField = new javax.swing.JTextField();
        apertureTextField = new javax.swing.JTextField();
        telescopeFocalLengthField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        enterInfoButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        magnificationMLabel = new javax.swing.JLabel();
        magnificationLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(593, 725));
        setResizable(false);
        setSize(new java.awt.Dimension(590, 720));

        jLabel1.setText("Aperture in mm:");

        jLabel2.setText("Focal Length in mm:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Telescope Info:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Eyepiece Info:");

        jLabel5.setText("Focal Length in mm:");

        jLabel6.setText("Apparent Field of View");

        jLabel7.setText("Barlow?");

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("No Barlow");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("2x");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("3x");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("4x");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton5.setText("5x");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveXRadioButton(evt);
            }
        });

        enterInfoButton.setText("Enter \nTelescope \nInfo");
        enterInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterTelescopeDataButtonEvent(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 567, Short.MAX_VALUE)
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Select an object:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Deep Sky Objects", "Orion Nebula(M42)", "Crab Nebula(M1)", "Andromeda Galaxy(M31)" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Planetary Bodies", "Moon", "Jupiter", "Venus", "Mars", "Saturn", "Uranus", "Neptune", "Mercury" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        magnificationMLabel.setText("Magnification:");

        magnificationLabel.setText("0x");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(apertureTextField)
                                        .addComponent(telescopeFocalLengthField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(23, 23, 23)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jRadioButton1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jRadioButton2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jRadioButton3))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jRadioButton4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jRadioButton5)))
                                    .addGap(19, 19, 19))))
                        .addGap(50, 50, 50)
                        .addComponent(enterInfoButton)
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fovField)
                                    .addComponent(eyepieceFocalLengthField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(magnificationMLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(magnificationLabel))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(apertureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(telescopeFocalLengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jRadioButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButton2)
                                    .addComponent(jRadioButton3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButton4)
                                    .addComponent(jRadioButton5)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(eyepieceFocalLengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fovField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))))
                    .addComponent(enterInfoButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(magnificationMLabel)
                    .addComponent(magnificationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        magnificationLabel.setText(magnification*3 + "x");
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        System.out.println("combo 2");
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void fiveXRadioButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveXRadioButton
        magnificationLabel.setText(magnification*5 + "x");
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton3.setSelected(false);
    }//GEN-LAST:event_fiveXRadioButton

    private void enterTelescopeDataButtonEvent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterTelescopeDataButtonEvent
        boolean goingDown = false;
        if (!apertureTextField.getText().equalsIgnoreCase("") || !telescopeFocalLengthField.getText().equalsIgnoreCase("")
                || !fovField.getText().equalsIgnoreCase("") || !eyepieceFocalLengthField.getText().equalsIgnoreCase("")) {
            int fov = 0;
            
            try {
                fov = Integer.parseInt(fovField.getText()) * 4;
                magnification = calculateMagnification(Integer.parseInt(telescopeFocalLengthField.getText()), Integer.parseInt(eyepieceFocalLengthField.getText()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid FOV.");
            }
            magnificationLabel.setText(magnification + "x");
            int fieldX = jPanel1.getWidth() / 2 - fov / 2;
            int fieldY = jPanel1.getHeight() / 2 - fov / 2;
            Image scaledMoon = moonImage.getScaledInstance(fov, fov, Image.SCALE_REPLICATE);
            Graphics g = jPanel1.getGraphics();
            //g.setColor(Color.white);
            g.setColor(Color.black);
            g.fillRect(0, 0, jPanel1.getWidth(), jPanel1.getHeight());
            //g.drawImage(moonImage, 0, 0, null);
            //g.drawImage(saturnImage, 0, 0, null);
            scaleJupiter();
            g.drawImage(jupiterImage,jPanel1.getWidth()/2 - jupiterImage.getWidth(null)/2, jPanel1.getHeight()/2 - jupiterImage.getHeight(null)/2, null);
            //scaleImage(jupiterImage, g);
            
            g.fillRect(0, 0, jPanel1.getWidth(), jPanel1.getHeight() / 2 - fov / 2);
            g.fillRect(0, jPanel1.getHeight() / 2 + fov / 2, jPanel1.getWidth(), jPanel1.getHeight() / 2 - fov / 2);
            drawAroundCircle(g, fieldX, fov, goingDown);
            jPanel1.paintComponents(g);
            g.setColor(Color.red);
            g.drawOval(fieldX, fieldY, fov, fov);
            System.out.println(jPanel1.getWidth() + ", " + jPanel1.getHeight());
            

        }
    }//GEN-LAST:event_enterTelescopeDataButtonEvent

    private void scaleJupiter(){
        System.out.println("scaling jupiter. Magnification is: " + magnification);
        
        if (magnification <= 550) {
            //3 
            jupiterImage = jupiter1.getImage();
            if (magnification <= 413) {
                //4
                jupiterImage = jupiter2.getImage();
                if (magnification <= 330) {
                    //5
                    jupiterImage = jupiter3.getImage();
                    if (magnification <= 275) {
                        //6
                        jupiterImage = jupiter4.getImage();
                        if (magnification <= 207) {
                            //8
                            jupiterImage = jupiter6.getImage();
                            if (magnification <= 165) {
                                //10
                                jupiterImage = jupiter9.getImage();
                                if (magnification <= 66) {
                                    //25   
                                    jupiterImage = jupiter10.getImage();
                                }
                            }
                        }
                    }
                }
            }
        } else{
           jupiterImage = jupiter1.getImage(); 
        } 
        
        
         
        
        
        
        
    }
    
    public class PanelToModify extends JPanel{

        private Image image;
        public PanelToModify(Image image){
            this.image = image;
        }
        
        @Override
        public void paintComponent(Graphics g) {
            g.drawImage(image.getScaledInstance(10, 10, Image.SCALE_SMOOTH),jPanel1.getWidth()/2 - jupiterImage.getWidth(null)/2, jPanel1.getHeight()/2 - jupiterImage.getHeight(null)/2, null);
            System.out.println("printing image");
        }
        
    }
    
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        magnificationLabel.setText(magnification*2 + "x");
        jRadioButton1.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        magnificationLabel.setText(magnification*4 + "x");
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton5.setSelected(false);
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        magnificationLabel.setText(magnification + "x");
        jRadioButton3.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    public void drawAroundCircle(Graphics g, int fieldX, int fov, boolean goingDown) {
        g.setColor(Color.black);
        //int θ = 0;
        int a = jPanel1.getWidth() / 2;
        int b = jPanel1.getHeight() / 2;
        int r = fov / 2;
//        int x = jPanel1.getWidth()/2;
//        int radius = fov/2;
//        int pX = jPanel1.getWidth()/2;
//        int pY = jPanel1.getHeight() - jPanel1.getHeight()/7;
        int y;
        int x;

        for (int θ = 0; θ <= 360; θ++) {
            //x = a + (r * cos(θ));
            x = calculatePoint(a, r, θ, true);
            //y = b + (r * sin(θ));
            y = calculatePoint(b, r, θ, false);
            

            if(θ == 0){
                System.out.println("X: " + x + " Y: " + y + " θ:" + θ);
                g.drawLine(jPanel1.getWidth(), jPanel1.getHeight()/2, x, y);   
            }
            
            
            for (int i = (jPanel1.getHeight() / 2 - fov / 2); i <= jPanel1.getHeight() / 2; i++) {
                if (y <= jPanel1.getHeight() / 2 && x >= jPanel1.getWidth() / 2) {
                    g.drawLine(jPanel1.getWidth(), i, x, y);
                }
                if (y <= jPanel1.getHeight() / 2 && x <= jPanel1.getWidth() / 2) {
                    g.drawLine(0, i, x, y);
                }

            }
            
            for (int i = jPanel1.getHeight() / 2; i <= (jPanel1.getHeight() / 2 + fov / 2); i++) {

                if (y >= jPanel1.getHeight() / 2 && x >= jPanel1.getWidth() / 2) {
                    g.drawLine(jPanel1.getWidth(), i, x, y);
                }
                if (y >= jPanel1.getHeight() / 2 && x <= jPanel1.getWidth() / 2) {
                    g.drawLine(0, i, x, y);
                }
            }
            
            
            
            
            

        }
        for (int i = jPanel1.getHeight() / 2 - fov / 2; i < jPanel1.getHeight() / 2 + fov / 2; i++) {

//              int x = jPanel1.getWidth()/2 - (fov/2);
//              int y = jPanel1.getHeight()/2;
//             
              //double squareY = pY + (Math.sqrt(radius - ((x - pX)* (x + pX))));
//             double squareY = x*x + 1;
//              
//              int y =  (int)(squareY);
//              
//              y = 2 + √[25 - (x-4)2]
//              y = 2 - √[25 - (x-4)2]
//            if (i > fieldX) {
//                g.drawLine(0, i, jPanel1.getWidth() / 2 - i, i);
//            } else {
//                g.drawLine(0, i, jPanel1.getWidth(), i);
//            }
//            if(x >= (jPanel1.getWidth()/2) - fov/2 && goingDown == false){
//              x--;
//              if(x == jPanel1.getWidth()/2 - fov/2){
//                  goingDown = true;
//              }
//            } else if(goingDown == true){
//                System.out.println("true");
//                x++;
//            }
        }
    }

    public int calculatePoint(int a, int r, int θ, boolean sinOrCos) {

        if (sinOrCos == true) {
            return (int) (a + (r * cos(θ)));
        } else {
            return (int) (a + (r * sin(θ)));
        }

    }

    public double sin(int angle) {

        return Math.sin(angle);
    }

    public double cos(int angle) {

        return Math.cos(angle);
    }

    public int calculateMagnification(int f1, int f2) {

        return (f1 / f2);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NumberAdditionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NumberAdditionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NumberAdditionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NumberAdditionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NumberAdditionUI().setVisible(true);
                
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apertureTextField;
    private javax.swing.JButton enterInfoButton;
    private javax.swing.JTextField eyepieceFocalLengthField;
    private javax.swing.JTextField fovField;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JLabel magnificationLabel;
    private javax.swing.JLabel magnificationMLabel;
    private javax.swing.JTextField telescopeFocalLengthField;
    // End of variables declaration//GEN-END:variables
}
